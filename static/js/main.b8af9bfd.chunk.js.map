{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","buttonCount","Math","ceil","buttonArray","downDisabled","upDisabled","className","cn","disabled","href","onClick","map","buttonItem","active","items","App","useState","setPerPage","setCurrentPage","startItem","lastItem","id","value","onChange","event","target","optionItem","htmlFor","page","slice","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAcd,EAAW,EAAGW,GAC5BI,EAA+B,IAAhBN,EACfO,EAAaP,IAAgBE,EAMnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAe,OAAS,QACvCM,QAhBY,kBAAMZ,EAAc,GAAKC,EAAaD,EAAc,IAWlE,oBAUDK,EAAYQ,KAAI,SAAAC,GACf,OACE,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAAed,IAF3B,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAcX,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUV,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeJ,EAAa,OAAS,QACrCK,QAlDU,kBAAMZ,EAAcE,GACjCD,EAAaD,EAAc,IA4C1B,wBC/DFgB,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KACIC,EAAY,EAEZrB,EAAc,IAChBqB,EAAYtB,GAAWC,EAAc,IAGvC,IAAIsB,EAAWD,EAAYtB,EAM3B,OAJIuB,EAAW,KACbA,EAAW,IAIX,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EAAY,EAD7C,cACoDC,EADpD,aAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAK,UAAKzB,GACV0B,SAAU,SAACC,GACTP,GAAYO,EAAMC,OAAOH,OACzBJ,EAAe,IAPnB,SAzBY,CAAC,EAAG,EAAG,GAAI,IAmCRP,KAAI,SAAAe,GAAU,OACzB,wBACEJ,MAAK,UAAKI,GADZ,SAIGA,GAFIA,UAQb,uBACEC,QAAQ,kBACRrB,UAAU,qBAFZ,+BAQF,cAAC,EAAD,CACEV,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAAC6B,GACbV,EAAeU,MAGnB,6BACGd,EAAMe,MAAMV,EAAWC,GAAUT,KAAI,SAACmB,GAAD,OACpC,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCxEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b8af9bfd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page:number) => void\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const buttonCount = Math.ceil(total / perPage);\n  const buttonArray = getNumbers(1, buttonCount);\n  const downDisabled = currentPage === 1;\n  const upDisabled = currentPage === buttonCount;\n\n  const handlerDown = () => currentPage > 1 && onPageChange(currentPage - 1);\n  const handlerUp = () => currentPage < buttonCount\n    && onPageChange(currentPage + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: downDisabled,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={downDisabled ? 'true' : 'false'}\n          onClick={handlerDown}\n        >\n          «\n        </a>\n      </li>\n      {buttonArray.map(buttonItem => {\n        return (\n          <li\n            className={cn('page-item', {\n              active: buttonItem === currentPage,\n            })}\n            key={buttonItem}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${buttonItem}`}\n              onClick={() => onPageChange(buttonItem)}\n            >\n              {buttonItem}\n            </a>\n          </li>\n        );\n      })}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === buttonCount,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={upDisabled ? 'true' : 'false'}\n          onClick={handlerUp}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const optionArray = [3, 5, 10, 20];\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  let startItem = 0;\n\n  if (currentPage > 1) {\n    startItem = perPage * (currentPage - 1);\n  }\n\n  let lastItem = startItem + perPage;\n\n  if (lastItem > 42) {\n    lastItem = 42;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${lastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={`${perPage}`}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            {optionArray.map(optionItem => (\n              <option\n                value={`${optionItem}`}\n                key={optionItem}\n              >\n                {optionItem}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label\n          htmlFor=\"perPageSelector\"\n          className=\"col-form-label col\"\n        >\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n      <ul>\n        {items.slice(startItem, lastItem).map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}